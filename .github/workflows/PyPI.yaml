# This Action mostly follows these docs
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

on:
  push:
    tags:
      - "Ligare.*-v*"
jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    outputs:
      package_name: ${{ steps.package_details.outputs.package_name }}
      package_directory: ${{ steps.package_details.outputs.package_directory }}

    steps:
      - uses: actions/checkout@v4
      - name: Get package details from tag
        # sets the step outputs package_directory and package_name
        id: package_details
        run: ./.github/workflows/PyPI-scripts/extract-package-details-from-tag.sh
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install pypa/build
        run: python3 -m pip install build --user

      - name: Build a binary wheel and a source tarball
        run: |
          set -eo pipefail
          pushd "${{ steps.package_details.outputs.package_directory }}"
          python3 -m build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: "${{ steps.package_details.outputs.package_directory }}/dist/"
          if-no-files-found: error

  publish-to-pypi:
    name: Publish Python 🐍 distribution 📦 to PyPI
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/Ligare.${{ needs.build.outputs.package_name }}
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://upload.pypi.org/legacy/

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # TODO change the release notes to use the changelog
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
